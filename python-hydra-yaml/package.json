{
  "name": "python-hydra-yaml",
  "displayName": "python-hydra-yaml",
  "description": "VSCode extension providing intelligent autocompletion and validation for Hydra configuration files.",
  "version": "0.4.3",
  "license": "MIT",
  "icon": "./docs/images/logo.png",
  "publisher": "GesonAnko",
  "repository": {
    "type": "git",
    "url": "https://github.com/Geson-anko/python-hydra-yaml.git"
  },
  "homepage": "https://github.com/Geson-anko/python-hydra-yaml",
  "categories": [
    "Linters",
    "Data Science",
    "Machine Learning",
    "Programming Languages"
  ],
  "keywords": [
    "hydra",
    "python",
    "yaml",
    "omegaconf",
    "config"
  ],
  "engines": {
    "vscode": "^1.99.0"
  },
  "activationEvents": [
    "onLanguage:yaml"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configurationDefaults": {
      "[yaml]": {
        "editor.acceptSuggestionOnEnter": "on",
        "editor.tabCompletion": "on"
      }
    },
    "commands": [
      {
        "command": "python-hydra-yaml.restart",
        "title": "Restart Python Hydra YAML Language Server"
      },
      {
        "command": "python-hydra-yaml.triggerCompletionWithEnter",
        "title": "Trigger YAML Completion with Enter"
      },
      {
        "command": "python-hydra-yaml.selectConfigDir",
        "title": "Select Hydra Configuration Directory"
      }
    ],
    "keybindings": [
      {
        "command": "python-hydra-yaml.triggerCompletionWithEnter",
        "key": "shift+enter",
        "when": "editorTextFocus && editorLangId == yaml"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Hydra YAML",
      "properties": {
        "pythonHydraYaml.configDir": {
          "type": "string",
          "default": "",
          "description": "Root directory containing Hydra YAML configuration files. Extension will only process YAML files in this directory and its subdirectories."
        }
      }
    },
    "semanticTokenTypes": [
      {
        "id": "specialKey",
        "description": "Hydra special keys (_target_, _args_, etc.)"
      },
      {
        "id": "targetValue",
        "description": "Values of _target_ fields"
      },
      {
        "id": "targetArg",
        "description": "Arg keys of _target_ fields"
      },
      {
        "id": "interpolationRef",
        "description": "Interpolation references"
      },
      {
        "id": "interpolationFunc",
        "description": "Interpolation functions"
      },
      {
        "id": "interpolationBracket",
        "description": "Interpolation brackets"
      },
      {
        "id": "packageDirective",
        "description": "@package directive"
      },
      {
        "id": "packageName",
        "description": "Package name"
      }
    ],
    "semanticTokenModifiers": [
      {
        "id": "declaration",
        "description": "Declaration of an entity"
      },
      {
        "id": "reference",
        "description": "Reference to an entity"
      },
      {
        "id": "function",
        "description": "Function entities"
      },
      {
        "id": "module",
        "description": "Module entities"
      },
      {
        "id": "class",
        "description": "Class entities"
      },
      {
        "id": "variable",
        "description": "Variable entities"
      },
      {
        "id": "constant",
        "description": "Constant entities"
      },
      {
        "id": "bracket",
        "description": "Brackets open and close."
      },
      {
        "id": "none",
        "description": "not recognized tokens"
      }
    ],
    "semanticTokenScopes": [
      {
        "scopes": {
          "specialKey": [
            "keyword.control.directive"
          ],
          "targetValue.module": [
            "entity.name.namespace"
          ],
          "targetValue.class": [
            "entity.name.class"
          ],
          "targetValue.function": [
            "entity.name.function"
          ],
          "targetValue.variable": [
            "variable"
          ],
          "targetValue.constant": [
            "constant"
          ],
          "targetValue.other": [
            "other"
          ],
          "targetArg": [
            "variable"
          ],
          "interpolationRef": [
            "variable.reference"
          ],
          "interpolationFunc": [
            "entity.name.function"
          ],
          "interpolationBracket": [
            "keyword.control.interpolation"
          ],
          "packageDirective": [
            "keyword.control.directive"
          ],
          "packageName": [
            "entity.name.namespace"
          ]
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "prepare": "husky install",
    "format": "prettier --write ."
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.99.0",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.23.0",
    "husky": "^9.1.7",
    "lint-staged": "^15.5.2",
    "prettier": "^3.5.3",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.2"
  },
  "dependencies": {
    "@vscode/python-extension": "^1.0.5",
    "vscode-languageclient": "^9.0.1"
  },
  "extensionDependencies": [
    "ms-python.python"
  ],
  "lint-staged": {
    "*": {
      "{ts,json}": "prettier --write"
    }
  }
}
